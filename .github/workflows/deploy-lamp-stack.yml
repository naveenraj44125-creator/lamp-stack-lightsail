name: Deploy LAMP Stack to Lightsail (Modular)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  LIGHTSAIL_INSTANCE_NAME: lamp-stack-demo
  LIGHTSAIL_STATIC_IP: 98.91.3.69
  AWS_REGION: us-east-1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql

    - name: Validate PHP syntax
      run: |
        find . -name "*.php" -exec php -l {} \;

    - name: Test PHP application
      run: |
        php -S localhost:8000 index.php &
        sleep 5
        curl -f http://localhost:8000/ || exit 1

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Python environment
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install boto3

    - name: Pre-deployment Steps
      run: |
        echo "🔧 Running pre-deployment steps (LAMP stack installation)..."
        python3 workflows/deploy-pre-steps.py ${{ env.LIGHTSAIL_INSTANCE_NAME }} --region ${{ env.AWS_REGION }}

    - name: Create deployment package
      run: |
        echo "📦 Creating application package..."
        tar -czf app.tar.gz index.php css/ config/ || tar -czf app.tar.gz *
        ls -la app.tar.gz

    - name: Post-deployment Steps
      run: |
        echo "🚀 Running post-deployment steps (application deployment)..."
        python3 workflows/deploy-post-steps.py \
          ${{ env.LIGHTSAIL_INSTANCE_NAME }} \
          app.tar.gz \
          --region ${{ env.AWS_REGION }} \
          --verify \
          --cleanup \
          --env GITHUB_SHA=${{ github.sha }} \
          --env GITHUB_REF=${{ github.ref_name }} \
          --env GITHUB_ACTOR=${{ github.actor }} \
          --env GITHUB_RUN_ID=${{ github.run_id }}

    - name: Verify deployment
      run: |
        echo "🔍 Verifying deployment..."
        echo "Waiting for application to be ready..."
        sleep 30
        
        # Test the deployed application
        for i in {1..10}; do
          if curl -f -s http://${{ env.LIGHTSAIL_STATIC_IP }}/ | grep -q "Hello Welcome"; then
            echo "✅ Application is working correctly!"
            echo "🌐 Application URL: http://${{ env.LIGHTSAIL_STATIC_IP }}/"
            exit 0
          fi
          echo "Waiting for application to respond... ($i/10)"
          sleep 10
        done
        
        echo "❌ Application verification failed"
        exit 1

    - name: Deployment Summary
      if: always()
      run: |
        echo "## 🚀 Modular LAMP Stack Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Instance**: ${{ env.LIGHTSAIL_INSTANCE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **IP Address**: ${{ env.LIGHTSAIL_STATIC_IP }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Application URL**: http://${{ env.LIGHTSAIL_STATIC_IP }}/" >> $GITHUB_STEP_SUMMARY
        echo "- **LAMP Stack**: ✅ Installed via modular script" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
